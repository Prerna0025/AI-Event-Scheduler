{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi,\nGive me the details to book meeting room for you. Date, time.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -912,
        -192
      ],
      "id": "7ca4c331-88c3-4aaa-a4da-57e610c22f52",
      "name": "When chat message received",
      "webhookId": "ac963032-ddb3-4472-b9f0-fe4eedd67eae"
    },
    {
      "parameters": {
        "inputText": "={{ $json.chatInput }}",
        "categories": {
          "categories": [
            {
              "category": "correct input",
              "description": "The Text must have date and time slot to book the meeting room"
            },
            {
              "category": "Incorrect input",
              "description": "The text missing date and time slot"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        -688,
        -192
      ],
      "id": "5b4ef9f0-05de-40e9-87af-733d89b8c9b4",
      "name": "Text Classifier",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -592,
        32
      ],
      "id": "17ec12ff-131c-4fcb-84da-552610f16eaa",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "FakzzdIHUwM6vOdE",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.chatInput }}\n\nDraft an email requesting to book the meeting room on any available floor for the mentioned date and time and duration.\n\nFrom the input, create a json response with the following objects. You should only give me a json response and nothing else\n\n1.) email_from: your_mailid\n2.) from_name: your_name\n3.) to_name: Receipient name\n4.)to_email: recepient_mailid\n5.) email_subject\n6.) email_body\n7.) full_mail_content: Include the subject,body, from and to here\n8.) date\n9.) start_time: (in a format that works for google calendar)\n10.) end_time: (in a format that works for Google calendar)\n11.) A small title for the event- an event name."
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -288,
        -192
      ],
      "id": "a0d46cc2-5b87-461d-8979-11ade5209877",
      "name": "Message a model",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "FakzzdIHUwM6vOdE",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "sendAndWait",
        "user": {
          "__rl": true,
          "value": "slack_user_id",
          "mode": "list",
          "cachedResultName": "slack_user_name"
        },
        "message": "={{ $json.message.content.email_body }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        112,
        -336
      ],
      "id": "4efb8a9e-cef4-4e26-906e-2113d00aedc2",
      "name": "Send message and wait for response",
      "webhookId": "7ea99a01-0e86-483c-a610-90658a2b4687",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "slackOAuth2Api": {
          "id": "TZgcY6NOTymqLgWO",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        336,
        -272
      ],
      "id": "19918a73-a635-4493-9653-addc6c19000a",
      "name": "Merge",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "sendAndWait",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "slack_receipient_id",
          "mode": "list",
          "cachedResultName": "slack_receipient_name"
        },
        "message": "=From: {{ $json.message.content.email_from }}\n\n{{ $json.message.content.email_body }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        784,
        -272
      ],
      "id": "25e63e34-979d-42d7-a0eb-385e1a369e5d",
      "name": "Send message and wait for response1",
      "webhookId": "a8c0f538-9be9-4358-bbfc-58e8d66fda93",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "slackOAuth2Api": {
          "id": "TZgcY6NOTymqLgWO",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3e22bb46-b10f-490d-96ec-daacff47ec68",
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        560,
        -272
      ],
      "id": "ad123781-54da-4138-b45f-e0117c39b253",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3e22bb46-b10f-490d-96ec-daacff47ec68",
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1008,
        -192
      ],
      "id": "3e672ad0-c816-4c9e-8717-c36f10f17dab",
      "name": "If1",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "sendTo": "={{ $('Message a model').item.json.message.content.email_from }}",
        "subject": "={{ $('Message a model').item.json.message.content.email_subject }}",
        "message": "=Meeting Room Booked.",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1232,
        -288
      ],
      "id": "01497527-e762-4ee8-b48c-4451655c769b",
      "name": "Send a message",
      "webhookId": "71443279-622b-4053-a250-0d3fd3d8531f",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "W0xmQ6IcFwPZnQg2",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "user",
        "user": {
          "__rl": true,
          "value": "slack_user_name",
          "mode": "username"
        },
        "text": "Meeting room booked",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1456,
        -288
      ],
      "id": "aaf7fe24-51a5-4bcd-a8d9-e00c67776f6b",
      "name": "Send a message1",
      "webhookId": "c94271e5-9076-4cf4-a0ae-46fbf8786317",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "slackOAuth2Api": {
          "id": "TZgcY6NOTymqLgWO",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "user_mail_id",
          "mode": "list",
          "cachedResultName": "user_mailid"
        },
        "start": "={{ $('Message a model').item.json.message.content.start_time }}",
        "end": "={{ $('Message a model').item.json.message.content.end_time }}",
        "additionalFields": {
          "summary": "={{ $('Message a model').item.json.message.content.event_name }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        1680,
        -288
      ],
      "id": "52ed3cce-5a31-422f-8751-c0d4b40e465f",
      "name": "Create an event",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "TWQ62V7ber1D1TcJ",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "user",
        "user": {
          "__rl": true,
          "value": "slack_user_name",
          "mode": "username"
        },
        "text": "Meeting room booking request declined",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1232,
        -96
      ],
      "id": "b215ff67-679a-4895-a1a9-5d3e2230bf57",
      "name": "Send a message2",
      "webhookId": "c94271e5-9076-4cf4-a0ae-46fbf8786317",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "slackOAuth2Api": {
          "id": "TZgcY6NOTymqLgWO",
          "name": "Slack account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Send message and wait for response",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message and wait for response": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Send message and wait for response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message and wait for response1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message1": {
      "main": [
        [
          {
            "node": "Create an event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2e01b7da-650f-4d63-a5e1-3d52777a2f01",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d4d4b9de3d57a0ba46058b484ace0fcbff5856eed1d4cbdb082330881361d370"
  },
  "id": "OtuwVJWIA1jSgKcO",
  "tags": []
}